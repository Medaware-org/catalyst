openapi: 3.0.3

info:
  title: Medaware Catalyst
  description: The API Specification for Medaware
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development environment

paths:
  /:
    get:
      operationId: catalystStatus
      summary: A status endpoint
      tags:
        - Status
      responses:
        200:
          description: Medaware Catalyst is up and running
          content:
            text/plain:
              schema:
                type: string

  /register:
    post:
      operationId: catalystRegister
      summary: Register a new Medaware user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registrationRequest"
      responses:
        200:
          description: User successfully registered

  /login:
    post:
      operationId: catalystLogin
      summary: Provide authentication facilities for existing users
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginRequest"
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"

  /logout:
    post:
      operationId: catalystLogout
      summary: Log out a logged-in user
      tags:
        - Authentication
      responses:
        200:
          description: OK

  /article:
    post:
      operationId: catalystCreateArticle
      summary: Create a new article
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/articleCreationRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uuidResponse"
    get:
      operationId: catalystQueryArticle
      summary: Search existing articles by querying lucene
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/articleQueryRequest"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/articleSearchResponse"

#  /image:
#    post:
#      operationId: catalystCreateImage
#      summary: Create and upload a new image
#      tags:
#        - Resources
#      requestBody:
#        required: true
#        content:
#          multipart/form-data:
#            schema:
#              $ref: "#/components/schemas/imageCreationRequest"
#      responses:
#        200:
#          description: OK

components:
  schemas:
    catalystError:
      type: object
      required:
        - brief
        - message
        - status
      properties:
        brief:
          type: string
        message:
          type: string
        status:
          type: integer

    registrationRequest:
      type: object
      required:
        - userName
        - firstName
        - lastName
        - password
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string

    loginRequest:
      type: object
      required:
        - userName
        - password
      properties:
        userName:
          type: string
        password:
          type: string

    tokenResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    uuidResponse:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          format: uuid

    imageDependency:
      type: object
      required:
        - designator
      properties:
        designator:
          type: string

    articleCreationRequest:
      type: object
      required:
        - title
        - lead
        - content
      properties:
        title:
          type: string
        lead:
          type: string
        content:
          type: string
#        dependencies:
#          type: array
#          items:
#            $ref: "#/components/schemas/imageDependency"

#    imageCreationRequest:
#      type: object
#      required:
#        - designator
#        - imageFile
#      properties:
#        designator:
#          type: string
#        file:
#          type: string
#          format: binary

    articleQueryRequest:
      type: object
      required:
        - query
        - hitsCount
      properties:
        query:
          type: string
        hitsCount:
          type: integer

    briefArticleResponse:
      type: object
      required:
        - title
        - lead
        - id
      properties:
        title:
          type: string
        lead:
          type: string
        id:
          type: string
          format: uuid

    articleSearchResponse:
      type: array
      items:
        $ref: "#/components/schemas/briefArticleResponse"